version: "3"

services:
  web:
    build: .
    container_name: fastapi
    ports:
      - ${PORT:-9001}:9001
    restart: unless-stopped
    env_file: [.env]
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:${PORT:-5555}/api/v1/heartbeat"]
    #   interval: 5s
    #   timeout: 10s
    #   retries: 5

  db:
    image: registry.docker.ir/postgres:latest
    container_name: postgres
    env_file: [.env]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 5

  redis:
    image: registry.docker.ir/redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 3G

  worker:
    build: .
    container_name: celery_worker
    command: celery -A config.celery.celery worker --loglevel=info
    env_file: [.env]
    depends_on:
      - web
      - redis

volumes:
  postgres_data:
